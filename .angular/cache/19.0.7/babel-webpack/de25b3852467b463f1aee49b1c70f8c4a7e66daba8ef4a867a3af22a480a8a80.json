{"ast":null,"code":"var _LoginPage;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginPage {\n  constructor(router, navCtrl // Inyectar NavController\n  ) {\n    this.router = router;\n    this.navCtrl = navCtrl;\n    this.email = 'test@example.com';\n    this.password = 'admin';\n  }\n  login() {\n    console.log('Email:', this.email);\n    console.log('Password:', this.password);\n    // Opción 1: Usando Router\n    this.router.navigate(['user']);\n    // Opción 2: Usando NavController (alternativa recomendada para Ionic)\n    this.navCtrl.navigateForward('user');\n  }\n}\n_LoginPage = LoginPage;\n_LoginPage.ɵfac = function LoginPage_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || _LoginPage)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.NavController));\n};\n_LoginPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _LoginPage,\n  selectors: [[\"app-login\"]],\n  standalone: false,\n  decls: 16,\n  vars: 2,\n  consts: [[1, \"ion-padding\"], [3, \"ngSubmit\"], [\"position\", \"floating\"], [\"type\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"expand\", \"full\", \"type\", \"submit\", 1, \"ion-margin-top\"]],\n  template: function LoginPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \"Login\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\", 0)(5, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginPage_Template_form_ngSubmit_5_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelementStart(6, \"ion-item\")(7, \"ion-label\", 2);\n      i0.ɵɵtext(8, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"ion-input\", 3);\n      i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginPage_Template_ion_input_ngModelChange_9_listener($event) {\n        i0.ɵɵtwoWayBindingSet(ctx.email, $event) || (ctx.email = $event);\n        return $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"ion-item\")(11, \"ion-label\", 2);\n      i0.ɵɵtext(12, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"ion-input\", 4);\n      i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginPage_Template_ion_input_ngModelChange_13_listener($event) {\n        i0.ɵɵtwoWayBindingSet(ctx.password, $event) || (ctx.password = $event);\n        return $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"ion-button\", 5);\n      i0.ɵɵtext(15, \"Login\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵtwoWayProperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtwoWayProperty(\"ngModel\", ctx.password);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm, i2.IonButton, i2.IonContent, i2.IonHeader, i2.IonInput, i2.IonItem, i2.IonLabel, i2.IonTitle, i2.IonToolbar, i2.TextValueAccessor],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["LoginPage","constructor","router","navCtrl","email","password","login","console","log","navigate","navigateForward","i0","ɵɵdirectiveInject","i1","Router","i2","NavController","selectors","standalone","decls","vars","consts","template","LoginPage_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginPage_Template_form_ngSubmit_5_listener","ɵɵtwoWayListener","LoginPage_Template_ion_input_ngModelChange_9_listener","$event","ɵɵtwoWayBindingSet","LoginPage_Template_ion_input_ngModelChange_13_listener","ɵɵadvance","ɵɵtwoWayProperty"],"sources":["C:\\Users\\Dell\\Desktop\\Prueba\\Prueba_Bluecorela\\JsonPlaceholder\\src\\app\\login\\login.page.ts","C:\\Users\\Dell\\Desktop\\Prueba\\Prueba_Bluecorela\\JsonPlaceholder\\src\\app\\login\\login.page.html"],"sourcesContent":["\r\n\r\nimport { Component } from '@angular/core';\r\n\r\n\r\nimport { Router } from '@angular/router'; // Importar Router\r\nimport { NavController } from '@ionic/angular'; // Importar NavController como alternativa\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],standalone:false,\r\n})\r\nexport class LoginPage {\r\n  email: string;\r\n  password: string;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private navCtrl: NavController // Inyectar NavController\r\n  ) {\r\n    this.email = 'test@example.com';\r\n    this.password = 'admin';\r\n  }\r\n\r\n  login() {\r\n    console.log('Email:', this.email);\r\n    console.log('Password:', this.password);\r\n    \r\n    // Opción 1: Usando Router\r\n    this.router.navigate(['user']);\r\n    \r\n    // Opción 2: Usando NavController (alternativa recomendada para Ionic)\r\n    this.navCtrl.navigateForward('user');\r\n  }\r\n}\r\n\r\n","\r\n<ion-header>\r\n  <ion-toolbar>\r\n    <ion-title>Login</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content class=\"ion-padding\">\r\n  <form (ngSubmit)=\"login()\">\r\n    <ion-item>\r\n      <ion-label position=\"floating\">Email</ion-label>\r\n      <ion-input type=\"email\" [(ngModel)]=\"email\" name=\"email\" required></ion-input>\r\n    </ion-item>\r\n    <ion-item>\r\n      <ion-label position=\"floating\">Password</ion-label>\r\n      <ion-input type=\"password\" [(ngModel)]=\"password\" name=\"password\" required></ion-input>\r\n    </ion-item>\r\n    <ion-button expand=\"full\" type=\"submit\" class=\"ion-margin-top\">Login</ion-button>\r\n  </form>\r\n</ion-content>\r\n"],"mappings":";;;;;AAaA,OAAM,MAAOA,SAAS;EAIpBC,YACUC,MAAc,EACdC,OAAsB,CAAC;EAAA,E;IADvB,KAAAD,MAAM,GAANA,MAAM;IACN,KAAAC,OAAO,GAAPA,OAAO;IAEf,IAAI,CAACC,KAAK,GAAG,kBAAkB;IAC/B,IAAI,CAACC,QAAQ,GAAG,OAAO;EACzB;EAEAC,KAAKA,CAAA;IACHC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAACJ,KAAK,CAAC;IACjCG,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE,IAAI,CAACH,QAAQ,CAAC;IAEvC;IACA,IAAI,CAACH,MAAM,CAACO,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;IAE9B;IACA,IAAI,CAACN,OAAO,CAACO,eAAe,CAAC,MAAM,CAAC;EACtC;;aArBWV,SAAS;;mCAATA,UAAS,EAAAW,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,aAAA;AAAA;;QAAThB,UAAS;EAAAiB,SAAA;EAAAC,UAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,mBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCVlBb,EAFJ,CAAAe,cAAA,iBAAY,kBACG,gBACA;MAAAf,EAAA,CAAAgB,MAAA,YAAK;MAEpBhB,EAFoB,CAAAiB,YAAA,EAAY,EAChB,EACH;MAGXjB,EADF,CAAAe,cAAA,qBAAiC,cACJ;MAArBf,EAAA,CAAAkB,UAAA,sBAAAC,4CAAA;QAAA,OAAYL,GAAA,CAAAnB,KAAA,EAAO;MAAA,EAAC;MAEtBK,EADF,CAAAe,cAAA,eAAU,mBACuB;MAAAf,EAAA,CAAAgB,MAAA,YAAK;MAAAhB,EAAA,CAAAiB,YAAA,EAAY;MAChDjB,EAAA,CAAAe,cAAA,mBAAkE;MAA1Cf,EAAA,CAAAoB,gBAAA,2BAAAC,sDAAAC,MAAA;QAAAtB,EAAA,CAAAuB,kBAAA,CAAAT,GAAA,CAAArB,KAAA,EAAA6B,MAAA,MAAAR,GAAA,CAAArB,KAAA,GAAA6B,MAAA;QAAA,OAAAA,MAAA;MAAA,EAAmB;MAC7CtB,EADoE,CAAAiB,YAAA,EAAY,EACrE;MAETjB,EADF,CAAAe,cAAA,gBAAU,oBACuB;MAAAf,EAAA,CAAAgB,MAAA,gBAAQ;MAAAhB,EAAA,CAAAiB,YAAA,EAAY;MACnDjB,EAAA,CAAAe,cAAA,oBAA2E;MAAhDf,EAAA,CAAAoB,gBAAA,2BAAAI,uDAAAF,MAAA;QAAAtB,EAAA,CAAAuB,kBAAA,CAAAT,GAAA,CAAApB,QAAA,EAAA4B,MAAA,MAAAR,GAAA,CAAApB,QAAA,GAAA4B,MAAA;QAAA,OAAAA,MAAA;MAAA,EAAsB;MACnDtB,EAD6E,CAAAiB,YAAA,EAAY,EAC9E;MACXjB,EAAA,CAAAe,cAAA,qBAA+D;MAAAf,EAAA,CAAAgB,MAAA,aAAK;MAExEhB,EAFwE,CAAAiB,YAAA,EAAa,EAC5E,EACK;;;MARgBjB,EAAA,CAAAyB,SAAA,GAAmB;MAAnBzB,EAAA,CAAA0B,gBAAA,YAAAZ,GAAA,CAAArB,KAAA,CAAmB;MAIhBO,EAAA,CAAAyB,SAAA,GAAsB;MAAtBzB,EAAA,CAAA0B,gBAAA,YAAAZ,GAAA,CAAApB,QAAA,CAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}